stages:
  - test
  - build
  - deploy

pep8:
  stage: test
  image: gitlab-registry.cern.ch/cloud-infrastructure/cci-scripts/tox
  except:
    - tags
  script:
    - cd $CI_PROJECT_DIR
    - tox -epep8

py27:
  stage: test
  image: gitlab-registry.cern.ch/cloud-infrastructure/cci-scripts/tox
  except:
    - tags
  script:
    - cd $CI_PROJECT_DIR
    - tox -epy27

py35:
  stage: test
  image: gitlab-registry.cern.ch/cloud-infrastructure/cci-scripts/tox
  except:
    - tags
  script:
    - cd $CI_PROJECT_DIR
    - scl enable rh-python35 'tox -epy35'

rpmbuild:
  stage: build
  image: gitlab-registry.cern.ch/cloud-infrastructure/cci-scripts/rpm-builder:rocky
  except:
    - tags
  script:
    - if [ -z "$CI_BUILD_TAG" ]; then export CI_BUILD_TAG=$CI_DEFAULT_BUILD_TAG; fi
    - export parser=(${CI_BUILD_TAG//-/ })
    - sed -i s/CERN_VERSION_PLACEHOLDER/${parser[0]}/g openstack-aardvark.spec
    - sed -i s/CERN_RELEASE_PLACEHOLDER/${parser[1]}/g openstack-aardvark.spec
    - python setup.py egg_info
    - cp aardvark.egg-info/PKG-INFO .
    - curl https://gitlab.cern.ch/cloud-infrastructure/cloud-dev/raw/master/gitlab/rpmbuild.sh | bash

kojicheck:
  stage: build
  image: gitlab-registry.cern.ch/cloud-infrastructure/cci-scripts/rpm-builder:rocky
  only:
    - tags
  script:
    - if [ -z "$CI_BUILD_TAG" ]; then export CI_BUILD_TAG=$CI_DEFAULT_BUILD_TAG; fi
    - export parser=(${CI_BUILD_TAG//-/ })
    - sed -i s/CERN_VERSION_PLACEHOLDER/${parser[0]}/g openstack-aardvark.spec
    - sed -i s/CERN_RELEASE_PLACEHOLDER/${parser[1]}/g openstack-aardvark.spec
    - python setup.py egg_info
    - cp aardvark.egg-info/PKG-INFO .
    - curl https://gitlab.cern.ch/cloud-infrastructure/cloud-dev/raw/master/gitlab/kojicheck.sh | bash

imgbuild:
  stage: build
  image: gitlab-registry.cern.ch/cloud/fedora-buildah:rawhide
  except:
    - tags
  script:
    - git clone https://git.openstack.org/openstack/loci.git /tmp/loci && cd /tmp/loci
    - buildah --storage-driver vfs bud --isolation chroot --build-arg FROM=centos:7 --build-arg PROJECT=$CI_PROJECT_NAME --build-arg WHEELS=loci/requirements:master-centos --build-arg PROJECT_REPO=$CI_REPOSITORY_URL --build-arg PROJECT_REF=$CI_COMMIT_SHA -t $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA .
    - buildah --storage-driver vfs push --creds gitlab-ci-token:$CI_BUILD_TOKEN $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA docker://$CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    - buildah --storage-driver vfs rmi $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA

kojiscratch:
  stage: deploy
  image: gitlab-registry.cern.ch/cloud-infrastructure/cci-scripts/rpm-builder:rocky
  except:
    - tags
  script:
    - if [ -z "$CI_BUILD_TAG" ]; then export CI_BUILD_TAG=$CI_DEFAULT_BUILD_TAG; fi
    - export parser=(${CI_BUILD_TAG//-/ })
    - sed -i s/CERN_VERSION_PLACEHOLDER/${parser[0]}/g openstack-aardvark.spec
    - sed -i s/CERN_RELEASE_PLACEHOLDER/${parser[1]}/g openstack-aardvark.spec
    - python setup.py egg_info
    - cp aardvark.egg-info/PKG-INFO .
    - export SCRATCH=1
    - curl https://gitlab.cern.ch/cloud-infrastructure/cloud-dev/raw/master/gitlab/kojibuild.sh | bash

kojibuild:
  stage: deploy
  image: gitlab-registry.cern.ch/cloud-infrastructure/cci-scripts/rpm-builder:rocky
  only:
    - tags
  script:
    - if [ -z "$CI_BUILD_TAG" ]; then export CI_BUILD_TAG=$CI_DEFAULT_BUILD_TAG; fi
    - export parser=(${CI_BUILD_TAG//-/ })
    - sed -i s/CERN_VERSION_PLACEHOLDER/${parser[0]}/g openstack-aardvark.spec
    - sed -i s/CERN_RELEASE_PLACEHOLDER/${parser[1]}/g openstack-aardvark.spec
    - python setup.py egg_info
    - cp aardvark.egg-info/PKG-INFO .
    - curl https://gitlab.cern.ch/cloud-infrastructure/cloud-dev/raw/master/gitlab/kojibuild.sh | bash
